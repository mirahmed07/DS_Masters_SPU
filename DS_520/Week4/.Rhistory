# Here
mu = 66
s0 = 6
n = 12
# We know standard error s = mu/√n
s = mu/sqrt(n)
s
# Here lowerbound
lb = 755
ub = 830
# Fit into normal distribution
lbn = lb/12
ubn = ub/12
z_lbn = lbn-mu/s
z_ubn = ubn-mu/s
z_lbn
z_ubn
# Here lowerbound
lb = 755
ub = 830
# Fit into normal distribution
lbn = lb/12
ubn = ub/12
z_lbn = (lbn-mu)/s
z_ubn = (ubn-mu)/s
z_lbn
z_ubn
# Here lowerbound
lb = 755
ub = 830
# Fit into normal distribution
lbn = lb/12
ubn = ub/12
z_lbn = (lbn-mu)/s
z_ubn = (ubn-mu)/s
print(paste("lower Z value",z_lbn))
print(paste("upper Z value",z_ubn))
pnorm(z_lbn)
pnorm(z_ubn)
print(paste("the probability that the weight of a carton falls between 755 and 830", pnorm(z_ubn) - pnorm(z_lbn)))
print(paste("The probability that the weight of a carton falls between 755 and 830 is", round(pnorm(z_ubn) - pnorm(z_lbn),5)))
# Here
mu = 66
s0 = 6
n = 12
# We know standard error s = mu/√n
s = s0/sqrt(n)
s
# Here lower bound & upper bound
lb = 755
ub = 830
# Fit into normal distribution
lbn = lb/12
ubn = ub/12
z_lbn = (lbn-mu)/s
z_ubn = (ubn-mu)/s
print(paste("lower Z value",z_lbn))
print(paste("upper Z value",z_ubn))
pnorm(z_lbn)
pnorm(z_ubn)
print(paste("The probability that the weight of a carton falls between 755 and 830 is", round(pnorm(z_ubn) - pnorm(z_lbn),5)))
# Here lower bound & upper bound
lb = 755
ub = 830
n = 12
v = n * (s0^2)
s = sqrt(v)
n_mu = n*mu
z_lb = (lb-n_mu)/s
z_ub = (ub-n_mu)/s
print(paste("lower Z value",z_lb))
print(paste("upper Z value",z_ub))
print(paste("The probability that the weight of a carton falls between 755 and 830 is", round(pnorm(z_ub) - pnorm(z_lb),5)))
d1 = c(1:6)
d1
install.packages("Rdice")
dice.combinations(faces = 6, dice = 2, rolls = 100, toSum = TRUE)
X <- expand.grid(1:6,1:6)
dim(unique(t(apply(X,1,sort))))
x
X
X$total = rowSums(X)
X
X[X$total%%5 == 0]
X[X$total %% 5 == 0]
class(X)
X[X$total %% 5 == 0]
X$total
X %>% filter(total ==5)
X %>% filter(total %% 5 ==0)
write.csv(X %>% filter(total %% 5 ==0), "roll_dice.csv")
X <- expand.grid("Dice1" = 1:6,"Dice1" = 1:6)
dim(unique(t(apply(X,1,sort))))
X <- expand.grid("Dice1" = 1:6,"Dice2" = 1:6)
dim(unique(t(apply(X,1,sort))))
X
X <- expand.grid("Dice 1" = 1:6,"Dice 2" = 1:6)
dim(unique(t(apply(X,1,sort))))
X
# From given data N(32,6)
mu = 32 # Mean of population as well as sample
s = 6 # Standard deviation of the population
n =25 # Sample size
# Standard deviation of the sample
s_n = s/sqrt(n)
s_n
# From given data N(29,5) for delayed-speaking group
mu = 29 # Mean of population as well as sample
s = 5 # Standard deviation of the population
n =25 # Sample size
# Standard deviation of the sample
s_n = s/sqrt(n)
s_n
# From given data N(32,6) for early-speaking group
mu_x = 32 # Mean of population as well as sample
s = 6 # Standard deviation of the population
n =25 # Sample size
# Standard deviation of the sample
s_n = s/sqrt(n)
s_n
# From given data N(29,5) for delayed-speaking group
mu_y = 29 # Mean of population as well as sample
s = 5 # Standard deviation of the population
n =25 # Sample size
# Standard deviation of the sample
s_n = s/sqrt(n)
s_n
# From given data N(32,6) for early-speaking group
mu_x = 32 # Mean of population as well as sample
s = 6 # Standard deviation of the population
n =25 # Sample size
# Standard deviation of the sample
s_n = s/sqrt(n)
s_n
# From given data N(29,5) for delayed-speaking group
mu_y = 29 # Mean of population as well as sample
s = 5 # Standard deviation of the population
n =25 # Sample size
# Standard deviation of the sample
s_n = s/sqrt(n)
s_n
# Difference between mean
mu_y - mu_x
# From given data N(32,6) for early-speaking group
mu_x = 32 # Mean of population as well as sample
s_x = 6 # Standard deviation of the population
n =25 # Sample size
# Standard deviation of the sample
s_x_n = s/sqrt(n)
s_x_n
# From given data N(29,5) for delayed-speaking group
mu_y = 29 # Mean of population as well as sample
s_y = 5 # Standard deviation of the population
n =25 # Sample size
# Standard deviation of the sample
s_y_n = s/sqrt(n)
s_y_n
# Difference between mean from repeated experiments
mu_y_x = mu_y - mu_x
mu_y_x
# Variance for early-speaking group
v_x_n = s_x_n ^2
# Variance for delayed-speaking group
v_y_n = s_y_n ^2
s_y_x =sqrt(v_x_n+v_y_n)
s_y_x
# From given data N(32,6) for early-speaking group
mu_x = 32 # Mean of population as well as sample
s_x = 6 # Standard deviation of the population
n =25 # Sample size
# Standard deviation of the sample
s_x_n = s/sqrt(n)
s_x_n
# From given data N(29,5) for delayed-speaking group
mu_y = 29 # Mean of population as well as sample
s_y = 5 # Standard deviation of the population
n =25 # Sample size
# Standard deviation of the sample
s_y_n = s/sqrt(n)
s_y_n
# From given data N(32,6) for early-speaking group
mu_x = 32 # Mean of population as well as sample
s_x = 6 # Standard deviation of the population
n =25 # Sample size
# Standard deviation of the sample
s_x_n = s_x/sqrt(n)
s_x_n
# From given data N(29,5) for delayed-speaking group
mu_y = 29 # Mean of population as well as sample
s_y = 5 # Standard deviation of the population
n =25 # Sample size
# Standard deviation of the sample
s_y_n = s_y/sqrt(n)
s_y_n
# Variance for early-speaking group
v_x_n = s_x_n ^2
# Variance for delayed-speaking group
v_y_n = s_y_n ^2
s_y_x =sqrt(v_x_n+v_y_n)
s_y_x
print(paste0("So sampling distribution of the difference y¯−x¯ between the mean scores in the two groups from repeated expetiments is N(",mu_y_x,",",s_y_x, ")"))
print(paste0("So sampling distribution of the difference y¯−x¯ between the mean scores in the two groups from repeated expetiments is N(",mu_y_x,",",round(s_y_x,5), ")"))
print(paste0("So sampling distribution of the difference y¯−x¯ between the mean scores in the two groups from repeated expetiments is N(",mu_y_x,", ",round(s_y_x,5), ")"))
# Let new mean difference yx and probability of the misleading experiment is P
yx = 0
P = 1 - ((yx- mu_y_x)/s_y_x)
P
# Let new mean difference yx and probability of the misleading experiment is P
yx = 0
z= ((yx- mu_y_x)/s_y_x)
Z
# Let new mean difference yx and probability of the misleading experiment is P
yx = 0
Z= ((yx- mu_y_x)/s_y_x)
Z
P = 1 - pnorm(Z)
print(paste("the probabilty of the mean score for delayed speaking is at least as large as that for early speaking is",P))
# Variance for early-speaking group
v_x_n = s_x_n ^2
# Variance for delayed-speaking group
v_y_n = s_y_n ^2
s_y_x =round(sqrt(v_x_n+v_y_n),5)
s_y_x
# Let new mean difference yx and probability of the misleading experiment is P
yx = 0
Z= ((yx- mu_y_x)/s_y_x)
Z
P = 1 - pnorm(Z)
print(paste("the probabilty of the mean score for delayed speaking is at least as large as that for early speaking is",P))
# Let new mean difference yx and probability of the misleading experiment is P
yx = 0
Z= round(((yx- mu_y_x)/s_y_x),2)
Z
P = 1 - pnorm(Z)
print(paste("the probabilty of the mean score for delayed speaking is at least as large as that for early speaking is",P))
P = round((1 - pnorm(Z)),5)
print(paste("the probabilty of the mean score for delayed speaking is at least as large as that for early speaking is",P))
# Variance for early-speaking group
v_x_n = s_x_n ^2
# Variance for delayed-speaking group
v_y_n = s_y_n ^2
s_y_x =sqrt(v_x_n+v_y_n)
s_y_x
# Let new mean difference yx and probability of the misleading experiment is P
yx = 0
# As Z = (X-mean)/Std. deviation
Z= round(((yx- mu_y_x)/s_y_x),3)
Z
P = round((1 - pnorm(Z)),5)
print(paste("the probabilty of the mean score for delayed speaking is at least as large as that for early speaking is",P))
# Let new mean difference yx and probability of the misleading experiment is P
yx = 0
# As Z = (X-mean)/Std. deviation
Z= round(((yx- mu_y_x)/s_y_x),5)
Z
P = round((1 - pnorm(Z)),5)
print(paste("the probabilty of the mean score for delayed speaking is at least as large as that for early speaking is",P))
# Let new mean difference yx and probability of the misleading experiment is P
yx = 0
# As Z = (X-mean)/Std. deviation
Z= round(((yx- mu_y_x)/s_y_x),10)
Z
P = round((1 - pnorm(Z)),5)
print(paste("the probabilty of the mean score for delayed speaking is at least as large as that for early speaking is",P))
# Let new mean difference yx and probability of the misleading experiment is P
yx = 0
# As Z = (X-mean)/Std. deviation
Z= round(((yx- mu_y_x)/s_y_x),5)
Z
P = round((1 - pnorm(Z)),5)
print(paste("the probabilty of the mean score for delayed speaking is at least as large as that for early speaking is",P))
setwd("C:/Users/mosab/DS_Masters/DS_520/Week4")
# For male
n = 400
p = .99
mean_m = n*p
mean_m
# For male
n = 400
p = .99
srd_m = sqrt(n*p*(1-0))
srd_m
# For male
n = 400
p = .99
srd_m = sqrt(n*p*(1-p))
srd_m
# For male
n = 400
p = .99
srd_m = sqrt(p*(1-p)/n)
srd_m
# For male
n_f = 400
p_f = .82
srd_f = sqrt(p_f*(1-p_f)/n_f)
srd_f
# For male
n_m = 400
p_m = .88
srd_m = sqrt(p_m*(1-p_m)/n_m)
srd_m
# For male
n_m = 400
p_m = .88
std_m = sqrt(p_m*(1-p_m)/n_m)
print(paste0("the approximate distribution of the proportion p^M of women who worked last summer is N(",p_m,", ",std_m ))
# For male
n_m = 400
p_m = .88
std_m = sqrt(p_m*(1-p_m)/n_m)
print(paste0("the approximate distribution of the proportion p^M of women who worked last summer is N(",p_m,", ",std_m, ")" ))
# For male
n_f = 400
p_f = .82
std_f = sqrt(p_f*(1-p_f)/n_f)
print(paste0("the approximate distribution of the proportion p^F of women who worked last summer is N(",p_f,", ",std_f, ")" ))
# For male
# sample size
n_m = 400
# sample proportion
p_m = .88
# Standard deviation for male
std_m = sqrt(p_m*(1-p_m)/n_m)
print(paste0("The approximate distribution of the proportion p^M of men who worked last summer is N(",p_m,", ",std_m, ")" ))
std_m_f = sqrt(std_m^2 + std_f^2)
std_m_f
# sample proportion for male and women comparison
p_m_f = p_m - p_f
# Standard deviation for male and women comparison
std_m_f = sqrt(std_m^2 + std_f^2)
print(paste0("The difference in the proportions who worked, p^M−p^F is N(",p_m_f,", ",std_m_f, ")" ))
# sample proportion for male and women comparison
p_m_f = round(p_m - p_f,2)
# Standard deviation for male and women comparison
std_m_f = sqrt(std_m^2 + std_f^2)
print(paste0("The difference in the proportions who worked, p^M−p^F is N(",p_m_f,", ",std_m_f, ")" ))
# sample proportion for male and women comparison
p_m_f = round(p_m - p_f,2)
# Standard deviation for male and women comparison
std_m_f = round(sqrt(std_m^2 + std_f^2),4)
print(paste0("The difference in the proportions who worked, p^M−p^F is N(",p_m_f,", ",std_m_f, ")" ))
# sample proportion for male and women comparison
p_m_f = round(p_m - p_f,2)
# Standard deviation for male and women comparison
std_m_f = round(sqrt(std_m^2 + std_f^2),5)
print(paste0("The difference in the proportions who worked, p^M−p^F is N(",p_m_f,", ",std_m_f, ")" ))
# sample proportion for male and women comparison
p_m_f = round(p_m - p_f,2)
# Standard deviation for male and women comparison
std_m_f = round(sqrt(std_m^2 + std_f^2),6)
print(paste0("The difference in the proportions who worked, p^M−p^F is N(",p_m_f,", ",std_m_f, ")" ))
# So
Z = (0-p_m_f)/std_m_f
Z
# So
Z = (0-p_m_f)/std_m_f
print(paste0("The probability that in the sample a higher proportion of women than men worked last summer would be",pnorm(Z)))
# So
Z = (0-p_m_f)/std_m_f
print(paste("The probability that in the sample a higher proportion of women than men worked last summer would be",pnorm(Z)))
# So
Z = (0-p_m_f)/std_m_f
print(paste("The probability that in the sample a higher proportion of women than men worked last summer would be",round(pnorm(Z),6)))
# So
Z = (0-p_m_f)/std_m_f
print(paste("The probability that in the sample a higher proportion of women than men worked last summer would be",round(pnorm(Z),7)))
# So
Z = round((0-p_m_f)/std_m_f,2)
print(paste("The probability that in the sample a higher proportion of women than men worked last summer would be",round(pnorm(Z),7)))
# So
Z = round((0-p_m_f)/std_m_f,4)
print(paste("The probability that in the sample a higher proportion of women than men worked last summer would be",round(pnorm(Z),7)))
# So
Z = round((0-p_m_f)/std_m_f,4)
print(paste("The probability that in the sample a higher proportion of women than men worked last summer would be",round(pnorm(Z),6)))
mu = 68
s = 22
n = 500
x = 70
z = (x-mu)/(s/sqrt(n))
# Probability of the average amount exceeding $70 is P(z>70) = 1-P(Z<70)
p = 1 - pnorm(z)
print(paste("Probability of the average amount exceeding $70 is", round(p,5)))
mu = 68
sigma = 22
n = 500
x = 70
z = (x-mu)/(sigma/sqrt(n))
# Probability of the average amount exceeding $70 is P(z>70) = 1-P(Z<70)
ans = 1 - pnorm(z)
print(paste("Probability of the average amount exceeding $70 is", round(ans,5)))
mu = 68
s = 22
n = 500
x = 70
z = (x-mu)/(s/sqrt(n))
# Probability of the average amount exceeding $70 is P(z>70) = 1-P(Z<70)
p = 1 - pnorm(z)
print(paste("Probability of the average amount exceeding $70 is", round(p,5)))
# Here
n = 12
x = 6
p = 3/4
ans = (factorial(n)/(factorial(x)*factorial(n-x)))*(p^x)*(1-p)^(n-x)
print(paste("The probability that exactly 6 out of 12 of these plants have red blossoms is",round(ans,4)))
#Here
n = 120
p = 3/4
mu = n*p
print(paste("The mean number of red-blossomed plants when 120 plants of this type are grown from seeds red-blossomed plants is",mu))
sx = sqrt(n*p*(1-p))
sx
# Here
X = 80
z = (X-mu)/sx
z
# The probability of obtaining at least 80 red-blossomed plants when 120 plants are grown from seeds
print(paste("The probability of obtaining at least 80 red-blossomed plants when 120 plants are grown from seeds is",round(1- pnorm(z),5)))
# Here
mu = 66
s0 = 6
n = 12
# We know standard error s = mu/√n
s = s0/sqrt(n)
s
# Here lower bound & upper bound
lb = 755
ub = 830
# Fit into normal distribution
lbn = lb/12
ubn = ub/12
z_lbn = (lbn-mu)/s
z_ubn = (ubn-mu)/s
print(paste("lower Z value",z_lbn))
print(paste("upper Z value",z_ubn))
pnorm(z_lbn)
pnorm(z_ubn)
print(paste("The probability that the weight of a carton falls between 755 and 830 is", round(pnorm(z_ubn) - pnorm(z_lbn),5)))
# Here
mu = 66
s0 = 6
n = 12
#lower bound & upper bound
lb = 755
ub = 830
# variance of the sum of 12 such random variable
v = n * (s0^2)
# standard deviation of the sum of 12 such random variables
s = sqrt(v)
# mean of the sum of 12 such random variables
n_mu = n*mu
z_lb = (lb-n_mu)/s
z_ub = (ub-n_mu)/s
print(paste("lower Z value",z_lb))
print(paste("upper Z value",z_ub))
print(paste("The probability that the weight of a carton falls between 755 and 830 is", round(pnorm(z_ub) - pnorm(z_lb),5)))
# From given data N(32,6) for early-speaking group
mu_x = 32 # Mean of population as well as sample
s_x = 6 # Standard deviation of the population
n =25 # Sample size
# Standard deviation of the sample
s_x_n = s_x/sqrt(n)
s_x_n
# From given data N(29,5) for delayed-speaking group
mu_y = 29 # Mean of population as well as sample
s_y = 5 # Standard deviation of the population
n =25 # Sample size
# Standard deviation of the sample
s_y_n = s_y/sqrt(n)
s_y_n
# Difference of y and x between mean scores in the two groups from repeated experiments
mu_y_x = mu_y - mu_x
mu_y_x
# Variance for early-speaking group
v_x_n = s_x_n ^2
# Variance for delayed-speaking group
v_y_n = s_y_n ^2
s_y_x =sqrt(v_x_n+v_y_n)
s_y_x
print(paste0("So sampling distribution of the difference y¯−x¯ between the mean scores in the two groups from repeated expetiments is N(",mu_y_x,", ",round(s_y_x,5), ")"))
# Let new mean difference yx and probability of the misleading experiment is P
yx = 0
# As Z = (X-mean)/Std. deviation
Z= round(((yx- mu_y_x)/s_y_x),5)
Z
P = round((1 - pnorm(Z)),5)
print(paste("the probabilty of the mean score for delayed speaking is at least as large as that for early speaking is",P))
# For female
# sample size for female
n_f = 400
# sample proportion for female (p^F)
p_f = .82
# Standard deviation for female
std_f = sqrt(p_f*(1-p_f)/n_f)
print(paste0("The approximate distribution of the proportion p^F of women who worked last summer is N(",p_f,", ",std_f, ")" ))
# For male
# sample size for male
n_m = 400
# sample proportion for male (p^M)
p_m = .88
# Standard deviation for male
std_m = sqrt(p_m*(1-p_m)/n_m)
print(paste0("The approximate distribution of the proportion p^M of men who worked last summer is N(",p_m,", ",std_m, ")" ))
# sample proportion for male and women comparison (p^M−p^F, mean)
p_m_f = round(p_m - p_f,2)
# Standard deviation for male and women comparison (√(variance of Male + variance of Female))
std_m_f = round(sqrt(std_m^2 + std_f^2),6)
print(paste0("The difference in the proportions who worked, p^M−p^F is N(",p_m_f,", ",std_m_f, ")" ))
# So
Z = round((0-p_m_f)/std_m_f,4)
print(paste("The probability that in the sample a higher proportion of women than men worked last summer would be",round(pnorm(Z),6)))
