abline(lm(sales~Production, data = data), col="red") # regression line (y~x)
# Scatterplot of DwellPermit & Production
plot(data$Production, data$sales, main="Scatterplot of sales & Production with least-squared regression line",
xlab="Production", ylab="sales", pch=19)
# Add fit lines
abline(lm(Sales~Production, data = data), col="red") # regression line (y~x)
#create plot with regression line, regression equation, and R-squared
ggplot(data=data, aes(x=Production, y=Sales)) +
geom_smooth(method="lm") +
geom_point() +
stat_regline_equation(label.x=30, label.y=170) +
stat_cor(aes(label=..rr.label..), label.x=30, label.y=160)
# Scatterplot of DwellPermit & Production
plot(data$Production, data$sales, main="Scatterplot of sales & Production with least-squared regression line",
xlab="Production", ylab="sales", pch=19)
# Add fit lines
abline(lm(Sales~Production, data = data), col="red") # regression line (y~x)
# Scatterplot of DwellPermit & Production
plot(data$Production, data$sales, main="Scatterplot of sales & Production with least-squared regression line",
xlab="Production", ylab="Sales", pch=19)
# Add fit lines
abline(lm(Sales~Production, data = data), col="red") # regression line (y~x)
# Scatterplot of DwellPermit & Production
plot(data$Production, data$Sales, main="Scatterplot of sales & Production with least-squared regression line",
xlab="Production", ylab="Sales", pch=19)
# Add fit lines
abline(lm(Sales~Production, data = data), col="red") # regression line (y~x)
#create plot with regression line, regression equation, and R-squared
ggplot(data=data, aes(x=Production, y=Sales)) +
geom_smooth(method="lm") +
geom_point() +
stat_regline_equation(label.x=80, label.y=170) +
stat_cor(aes(label=..rr.label..), label.x=80, label.y=160)
#create plot with regression line, regression equation, and R-squared
ggplot(data=data, aes(x=Production, y=Sales)) +
geom_smooth(method="lm") +
geom_point() +
stat_regline_equation(label.x=90, label.y=170) +
stat_cor(aes(label=..rr.label..), label.x=90, label.y=160)
b = unname(fit$coefficients[1])
a = unname(fit$coefficients[2])
x = 125
sales = a*x + b
print(paste("Predicted value of Production for a country that has an index of 125 for Production is", sales))
id = which(data$Country == "Finland" & data$Production ==125)
#List of residual for Netherlands (15th on the list)
print(paste("Residual for Finland is",resid(fit)[id]))
id
resid(fit)
rsq <-  cor(data$Production, data$Sales) ^ 2
rsq
cor(data$Production, data$Sales)
gc()
gc()
gc()
install.packages(c("cpp11", "data.table", "digest", "hms", "influenceR", "lattice", "lifecycle", "mgcv", "pillar", "readr", "tidyr"))
mean(data)
data = (572, 572, 573, 568, 569, 575, 565, 570)
data = array(572, 572, 573, 568, 569, 575, 565, 570)
data = c(572, 572, 573, 568, 569, 575, 565, 570)
mean(data)
40/160
data = c(121,   173,   157,   165,   170,   161,   142,   171,   184,   100,   145,   196)
median(data)
sort(data, decreasing = FALSE)
sizeof(data)
length(data)
describe(data)
arr = c(121,   173,   157,   165,   170,   161,   142,   171,   184,   100,   145,   196)
length(arr)
summary(arr)
boxplot(arr,
ylab = "weight"
)
boxplot.stats(arr)$out
(142+145)/2
(171+173)/2
172 – 143.5
172–143.5
172-143.5
143.5-1.5*28.5
172 + 1.5*28.5
length(boxplot.stats(arr)$out)
(150-185)/39
round((150-185)/39,2)
(150-185)/39
pnorm((150-185)/39)
pnorm(.8974359 )
pnorm(-.8974359 )
install.packages("webshot")
install.packages("latexpdf")
file_name = "ex02-157fos.xls"
data = read_xls(file_name)
##library(tidyverse)
library(readxl)
file_name = "ex02-157fos.xls"
data = read_xls(file_name)
data
addmargins(table(data))
addmargins(table(data$Field))
# Here
n = 12
x = 9
p = 3/4
ans = (factorial(n)/(factorial(x)*factorial(n-x)))*(p^x)*(1-p)^(n-x)
print(paste("The probability that exactly 9 out of 12 of these plants have red blossoms is",round(ans,4)))
dbinom(x,n,p)
.5/sqrt(10)
5/sqrt(10)
dbinom(90,100,.8)
dbinom(90,100,80)
dbinom(90,100,.8, lower.tail=  FALSE)
dbinom(90,100,.8)
n = 100
p = .8
m = np
n = 100
p = .8
m = n*p
m
s = sqrt(n*p*(1-p))
s
1-pnorm(90, m,s)
dbinom(90,n,p)
pbinom(90,n,p)
2*dbinom(90,n,p)
dbinom(90,n,p)
1-pbinom(90,n,p)
pbinom(90,n,p)
1-pnorm(90, m,s, lower.tail = FALSE)
1-pnorm(90, m,s, lower.tail = TRUE)
pnorm(90, m,s, lower.tail = FALSE)
pbinom(90,n,p, lower.tail = FALSE)
2*pbinom(90,n,p, lower.tail = FALSE)
pbinom(90,n,p)
dbinom(90,n,p)
dbinom(90,n,p, lower.tail = FALSE)
dbinom(90,n,p)
pbinom(90,n,p, lower.tail = FALSE)
pbinom(90,n,p)
pbinom(90,n,p)
pbinom(90,100,.8, lower.tail = FALSE)
pbinom(90,100,.8)
dbinom(8,10,.6)
(.6^8) *(.4^2)
45 * (.6^8) *(.4^2)
factanal(10)/(factorial(8)*factorial(2))
factorial(10)/(factorial(8)*factorial(2))
p = 0.18
N = 300
SE = sqrt(p*(1-p)/N)
SE
p = 0.18
N = 300
SE = sqrt(p*(1-p)*N)
SE
pnorm(0.20,0.18,SE) - pnorm(0.15,0.18,SE)
p = 0.18
N = 300
SE = sqrt(p*(1-p)/N)
SE
pnorm(0.20,0.18,SE) - pnorm(0.15,0.18,SE)
1- pbinom(90,100,.8)
pbinom(100,n,p)
n = 100
p = .8
pbinom(100,n,p)
n = 100
p = .8
pbinom(10,n,p)
n = 100
p = .8
pbinom(80,n,p)
n = 100
p = .8
pbinom(90,n,p)
n = 100
p = .8
pbinom(110,n,p)
pbinom(4, size=12, prob=0.2)
n = 100
p = .8
pbinom(1,size = n, prob = p)
n = 100
p = .8
pbinom(90,size = n, prob = p)
dbinom(90:100,n,p)
sum(dbinom(90:100,n,p))
n = 500
p =.66
m = n*p
m
sqrt(n*p*(1-p))
file_name = "Hydrocarbon(2).xlsx"
data = read_xls(file_name)
##library(tidyverse)
library(readxl)
library(ggplot2)
library(ggpubr)
file_name = "Hydrocarbon(2).xlsx"
data = read_xls(file_name)
setwd("C:/Users/mosab/DS_Masters/DS_520/Week5_mid")
file_name = "Hydrocarbon(2).xlsx"
data = read_xls(file_name)
file_name = "Hydrocarbon(2).xlsx"
data = read_excel(file_name)
data
data
ggplot(data, aes(x=field, y=total)) + geom_bar(stat="identity") +
labs(x="Field", y="Total")
ggplot(data, aes(x=Index, y=Y)) + geom_bar(stat="identity") +
labs(x="Field", y="Total")
# Creo i bin
data$Groups <- cut(x=data$Y, breaks=seq(from=0, to=ceiling(max(dat$Y)), by = 20))
# Creo i bin
data$Groups <- cut(x=data$Y, breaks=seq(from=0, to=ceiling(max(data$Y)), by = 20))
# Raggruppo i dati nei bin
Bygroup = tapply(data$Index, data$Groups, sum)
# Faccio il plot dei bin
barplot(height = Bygroup, xlab = "Index", ylab = "Hydrocarbon Escaping")
# Creo i bin
data$Groups <- cut(x=data$Y, breaks=seq(from=0, to=ceiling(max(data$Y)), by = 20))
# Raggruppo i dati nei bin
Bygroup = tapply(data$X1, data$Groups, sum)
# Faccio il plot dei bin
barplot(height = Bygroup, xlab = "Index", ylab = "Hydrocarbon Escaping")
# Creo i bin
data$Groups <- cut(x=data$X1, breaks=seq(from=0, to=ceiling(max(data$Y)), by = 20))
# Raggruppo i dati nei bin
Bygroup = tapply(data$X1, data$Groups, sum)
# Faccio il plot dei bin
barplot(height = Bygroup, xlab = "Index", ylab = "Hydrocarbon Escaping")
# Creo i bin
data$Groups <- cut(x=data$X1, breaks=seq(from=0, to=ceiling(max(data$X1)), by = 20))
# Raggruppo i dati nei bin
Bygroup = tapply(data$X1, data$Groups, sum)
# Faccio il plot dei bin
barplot(height = Bygroup, xlab = "Index", ylab = "Hydrocarbon Escaping")
data
ggplot(data, aes(x=Index, y=Y)) + geom_bar(stat="identity") +  geom_density() +
geom_rug() +
labs(x="Field", y="Hydrocarbon escaping")
ggplot(data, aes(x=Index, y=Y)) + geom_bar(stat="identity") + geom_histogram(aes(y=Y),fill="bisque",color="white",alpha=0.7) +  geom_density() +
geom_rug() +
labs(x="Field", y="Hydrocarbon escaping")
ggplot(data, aes(x=Index, y=Y)) + geom_bar(stat="identity") + geom_histogram(aes(y=..Y..),fill="bisque",color="white",alpha=0.7) +  geom_density() +
geom_rug() +
labs(x="Field", y="Hydrocarbon escaping")
ggplot(data, aes(x=Index, y=Y)) + geom_bar(stat="identity") + geom_histogram(aes(y=..density..),fill="bisque",color="white",alpha=0.7) +  geom_density() +
geom_rug() +
labs(x="Field", y="Hydrocarbon escaping")
ggplot(data, aes(x=Index, y=Y)) + geom_bar(stat="identity") +
labs(x="Field", y="Hydrocarbon escaping")
ggplot(data, aes(x=Y)) + geom_histogram(bins=10)
ggplot(data, aes(x=Y)) + geom_histogram(bins=20)
ggplot(data, aes(x=Index,y=Y)) + geom_histogram(bins=20)
ggplot(data, aes(x=Y)) + geom_histogram(bins=20)+ geom_bar(stat="identity") +
labs(x="Count", y="Hydrocarbon escaping")
ggplot(data, aes(x=Y)) + geom_histogram(bins=20) +
labs(x="Count", y="Hydrocarbon escaping")
ggplot(data, aes(x=Y)) + geom_histogram(bins=20)+geom_density(aes(color=variable)) +
labs(x="Count", y="Hydrocarbon escaping")
ggplot(data, aes(x=Y)) + geom_histogram(bins=20)+geom_density(aes(color=Y)) +
labs(x="Count", y="Hydrocarbon escaping")
ggplot(data, aes(x=Y)) + geom_histogram(bins=20)+geom_density(aes(color=X)) +
labs(x="Count", y="Hydrocarbon escaping")
ggplot(data, aes(x=Y)) + geom_histogram(bins=20)+geom_density() +
labs(x="Count", y="Hydrocarbon escaping")
ggplot(data, aes(x=Y)) + geom_histogram(bins=20)+geom_density() + geom_rug() +
labs(x="Count", y="Hydrocarbon escaping")
ggplot(data, aes(x=Y)) + geom_histogram(bins=20)
labs(x="Count", y="Hydrocarbon escaping")
ggplot(data, aes(x=Y)) + geom_histogram(bins=20)
labs(x="Hydrocarbon escaping", y="Count")
file_name = "Hydrocarbon(2).xlsx"
df = read_excel(file_name)
file_name = "Hydrocarbon(2).xlsx"
df = read_excel(file_name)
df
ggplot(df, aes(x=Y)) + geom_histogram(bins=20)
labs(x="Hydrocarbon escaping", y="Count")
ggplot(df, aes(x=Y)) + geom_histogram(bins=20) +
labs( y="Count", x="Hydrocarbon escaping")
ggplot(df, aes(x=Y)) + geom_histogram(bins=20) + geom_density(alpha=.2)
+ labs( y="Count", x="Hydrocarbon escaping")
ggplot(df, aes(x=Y)) + geom_histogram(bins=20) + geom_density(alpha=.2)+ labs( y="Count", x="Hydrocarbon escaping")
ggplot(data = df, mapping = aes(x=Y)) +
geom_histogram(aes(y=..density..),fill="bisque",color="white",alpha=0.7) +
geom_density() +
geom_rug() +
labs(x='mean education per house') +
theme_minimal()
ggplot(data = df, mapping = aes(x=Y)) +
geom_histogram(aes(y=..density..),fill="blue",color="white",alpha=0.7) +
geom_density() +
geom_rug() +
labs(x='mean education per house') +
theme_minimal()
ggplot(df, aes(x=Y)) + geom_histogram(aes(y=..density..),bins=20) + geom_density(alpha=.2)+ labs( y="Count", x="Hydrocarbon escaping")
df.summary()
summary(df)
ggplot(df, aes(x=Y)) + geom_histogram(bins=20) + geom_density(alpha=.2)+ labs( y="Density", x="Hydrocarbon escaping")
ggplot(df, aes(x=Y)) + geom_histogram(aes(y=..density..),bins=20) + labs( y="Density", x="Hydrocarbon escaping")
ggplot(df, aes(x=Y)) + geom_histogram(aes(y=..density..),bins=20) + geom_density(alpha=.2)+ labs( y="Density", x="Hydrocarbon escaping")
ggplot(df, aes(x=Y)) + geom_histogram(aes(y=..density..),bins=25) + geom_density(alpha=.2)+ labs( y="Density", x="Hydrocarbon escaping")
ggplot(df, aes(x=Y)) + geom_histogram(aes(y=..density..),bins=20) + geom_density(alpha=.2)+ labs( y="Density", x="Hydrocarbon escaping")
ggplot(df, aes(x=Y)) + geom_histogram(bins=20) labs( y="Counts", x="Hydrocarbon escaping")
ggplot(df, aes(x=Y)) + geom_histogram(bins=20) + labs( y="Counts", x="Hydrocarbon escaping")
fit<- lm(df$X4~ df$Y)
summary(fit)
#create plot with regression line, regression equation, and R-squared
ggplot(data=df, aes(x=X4, y=Y)) +
geom_smooth(method="lm") +
geom_point() +
stat_regline_equation(label.x=30, label.y=170) +
stat_cor(aes(label=..rr.label..), label.x=30, label.y=160)
#create plot with regression line, regression equation, and R-squared
ggplot(data=df, aes(x=X4, y=Y)) +
geom_smooth(method="lm") +
geom_point() +
stat_regline_equation(label.x=5, label.y=40) +
stat_cor(aes(label=..rr.label..), label.x=50, label.y=30)
#create plot with regression line, regression equation, and R-squared
ggplot(data=df, aes(x=X4, y=Y)) +
geom_smooth(method="lm") +
geom_point() +
stat_regline_equation(label.x=5, label.y=40) +
stat_cor(aes(label=..rr.label..), label.x=5, label.y=30)
#create plot with regression line, regression equation, and R-squared
ggplot(data=df, aes(x=X4, y=Y)) +
geom_smooth(method="lm") +
geom_point() +
stat_regline_equation(label.x=5, label.y=50) +
stat_cor(aes(label=..rr.label..), label.x=5, label.y=45)
cor(x= df$X4, y= df$Y)
rsq <-  cor(x= df$X4, y= df$Y) ^ 2
rsq
predict(fit, c(3.45,4.02.5.8))
predict(fit, c(3.45,4.02,5.8))
t_df = data.frame(X4 = c(3.45,4.02,5.8))
t_df
predict(fit, t_df)
predict(fit)
predict(fit, newdata = t_df)
t_df$pred_Y = intercept + slope*(t_df$X4)
intercept <- fit$coefficients[1]
slope <- fit$coefficients[2]
t_df$pred_Y = intercept + slope*(t_df$X4)
t_df
intercept <- fit$coefficients[1]
slope <- fit$coefficients[2]
intercept
slope
fit<- lm(df$Y~df$X4)
summary(fit)
intercept <- fit$coefficients[1]
slope <- fit$coefficients[2]
intercept
slope
t_df$pred_Y = intercept + slope*(t_df$X4)
t_df
df.res = resid(df.lm)
df = lm(Y ~ X4, data=df)
df = resid(df)
df
file_name = "Hydrocarbon(2).xlsx"
df = read_excel(file_name)
df.lm = lm(Y ~ X4, data=df)
df.res = resid(df)
df
plot(df$Y, df.res, ylab="Residuals", xlab="Y", main="Residual plot", pch=19)
abline(0, 0)
df.res
df.res
df.lm = lm(Y ~ X4, data=df)
df.res = resid(df.lm)
df
df.res
plot(df$Y, df.res, ylab="Residuals", xlab="Y", main="Residual plot", pch=19)
abline(0, 0)
mean(data.res)
mean(df.res)
df[which(df$X4==3.45)]
df(df$X4==3.45)
##library(tidyverse)
library(dplyr)
library(readxl)
library(ggplot2)
library(ggpubr)
df>%> filter(X4==3.45)
filter(df, X4==3.45)
filter(df, X4 == 3.45|X4 == 4|X4 == 4.5)
t_df = data.frame(X4 = c(3.45,4,4.5))
t_df
t_df$pred_Y = intercept + slope*(t_df$X4)
t_df
#create plot with regression line, regression equation, and R-squared
ggplot(data=df, aes(x=X4, y=Y)) +
geom_smooth(method="lm") +
geom_point() +
stat_regline_equation(label.x=5, label.y=50) +
stat_cor(aes(label=..rr.label..), label.x=5, label.y=45+ labs( x="Petrol Pressure", y="Hydrocarbon escaping")
#create plot with regression line, regression equation, and R-squared
ggplot(data=df, aes(x=X4, y=Y)) +
geom_smooth(method="lm") +
geom_point() +
stat_regline_equation(label.x=5, label.y=50) +
stat_cor(aes(label=..rr.label..), label.x=5, label.y=45)
+ labs( x="Petrol Pressure", y="Hydrocarbon escaping")
#create plot with regression line, regression equation, and R-squared
ggplot(data=df, aes(x=X4, y=Y)) +
geom_smooth(method="lm") +
geom_point() +
stat_regline_equation(label.x=5, label.y=50) +
stat_cor(aes(label=..rr.label..), label.x=5, label.y=45) + labs( x="Petrol Pressure", y="Hydrocarbon escaping")
#create plot with regression line, regression equation, and R-squared
ggplot(data=df, aes(x=X4, y=Y)) +
geom_smooth(method="lm") +
geom_point() +
stat_regline_equation(label.x=5, label.y=50) +
stat_cor(aes(label=..rr.label..), label.x=5, label.y=45) + labs( x="Petrol Pressure", y="Hydrocarbon escaping")
filter(df, X4 %in% c(3.54,4.02,5.8))
filter(df, X4 %in% c(3.4,4.02,5.8))
filter(df, X4 %in% c(3.5,4.02,5.8))
filter(df, X4== 3.5)
filter(df, X4 %in% c(3.45,4.02,5.8))
filter(df[,5:6], X4 %in% c(3.45,4.02,5.8))
t_df = filter(df[,5:6], X4 %in% c(3.45,4.02,5.8))
t_df
t_df$pred_Y = intercept + slope*(t_df$X4)
t_df
t_df$res = t_df$Y-t_df$pred_Y
t_df
t_df1 = filter(df[,5:6], X4 %in% c(3.5,4,4))
t_df1
t_df = filter(df[,5:6], X4 %in% c(3.45,4.02,5.8))
t_df
t_df = data.frame(X4 = c(3.4,4,4.5))
t_df
intercept <- fit$coefficients[1]
slope <- fit$coefficients[2]
intercept
slope
t_df$pred_Y = intercept + slope*(t_df$X4)
t_df
t_df = filter(df[,5:6], X4 %in% c(3.45,4.02,5.8))
t_df
t_df$pred_Y = intercept + slope*(t_df$X4)
t_df
t_df$res = t_df$Y-t_df$pred_Y
t_df
qqnorm(df$Y, pch = 1, frame = FALSE)
qqline(df$Y, col = "steelblue", lwd = 2)
##library(tidyverse)
library(dplyr)
library(readxl)
library(ggplot2)
library(ggpubr)
file_name = "Hydrocarbon(2).xlsx"
df = read_excel(file_name)
df
summary(df)
ggplot(df, aes(x=Y)) + geom_histogram(bins=20) + labs( y="Counts", x="Hydrocarbon escaping")
ggplot(df, aes(x=Y)) + geom_histogram(aes(y=..density..),bins=20) + geom_density(alpha=.2)+ labs( y="Density", x="Hydrocarbon escaping")
fit<- lm(df$Y~df$X4)
summary(fit)
#create plot with regression line, regression equation, and R-squared
ggplot(data=df, aes(x=X4, y=Y)) +
geom_smooth(method="lm") +
geom_point() +
stat_regline_equation(label.x=5, label.y=50) +
stat_cor(aes(label=..rr.label..), label.x=5, label.y=45) + labs( x="Petrol Pressure", y="Hydrocarbon escaping")
cor(x= df$X4, y= df$Y)
#create plot with regression line, regression equation, and R-squared
ggplot(data=df, aes(x=X4, y=Y)) +
geom_smooth(method="lm") +
geom_point() +
stat_regline_equation(label.x=5, label.y=50) +
stat_cor(aes(label=..rr.label..), label.x=5, label.y=45) + labs( x="Petrol Pressure", y="Hydrocarbon escaping")
t_df = data.frame(X4 = c(3.4,4,4.5))
t_df
intercept <- fit$coefficients[1]
slope <- fit$coefficients[2]
intercept
slope
t_df$pred_Y = intercept + slope*(t_df$X4)
t_df
df.lm = lm(Y ~ X4, data=df)
df.res = resid(df.lm)
df
df.res
plot(df$Y, df.res, ylab="Residuals", xlab="Y", main="Residual plot", pch=19)
abline(0, 0)
mean(df.res)
t_df = filter(df[,5:6], X4 %in% c(3.45,4.02,5.8))
t_df
t_df$pred_Y = intercept + slope*(t_df$X4)
t_df
t_df$res = t_df$Y-t_df$pred_Y
t_df
qqnorm(df$Y, pch = 1, frame = FALSE)
qqline(df$Y, col = "steelblue", lwd = 2)
library(latexpdf)
library(rmarkdown)
install.packages("tinytex")
library(tinytex)
unlink("C:/Users/mosab/DS_Masters/DS_520/Week2/Week_2_Assignment_Mir_cache", recursive = TRUE)
install.packages("latexpdf")
library(latexpdf)
library(tinytex)
library(rmarkdown)
unlink("midterm_pt2_mir_cache", recursive = TRUE)
