}
curve(dnorm(x, mean = 0, sd = 1), from = -3, to = 3)
colorArea(from=-3, to=Z, dnorm)
text(Z+.2,0.2, round(Z,2))
# So the P-value is
P = pnorm(Z, lower.tail = FALSE)
# So the P-value is
P = pnorm(Z, lower.tail = FALSE)
p
# So the P-value is
P = pnorm(Z, lower.tail = FALSE)
p
# for n = 10
n = 10
s = S/sqrt(n)
print(paste("Z - value =",)(xbar-m0)/s)
# for n = 10
n = 10
s = S/sqrt(n)
print(paste("Z - value =",(xbar-m0)/s))
pnorm((xbar-m0)/s, lower.tail = FALSE)
# for n = 10
n = 10
s = S/sqrt(n)
print(paste("Z - value =",(xbar-m0)/s))
pnorm((xbar-m0)/s, lower.tail = FALSE)
# Here
m0 = 0 # null hypothesis mean
xbar = 4 # new mean
S = 14 # standard deviation
a = .05 # level of significance
# for n = 10
n = 10
s = S/sqrt(n)
print(paste("Z - value =",(xbar-m0)/s))
pnorm((xbar-m0)/s, lower.tail = FALSE)
# for n = 10
n = 10
s = S/sqrt(n)
print(paste("Z - value =",(xbar-m0)/s))
paste("P-value =",pnorm((xbar-m0)/s, lower.tail = FALSE))
# for n = 10
n = 10
s = S/sqrt(n)
print(paste("Z - value =",(xbar-m0)/s))
print(paste("P-value =",pnorm((xbar-m0)/s, lower.tail = FALSE)))
# for n = 20
n = 20
s = S/sqrt(n)
print(paste("Z - value =",(xbar-m0)/s))
print(paste("P-value =",pnorm((xbar-m0)/s, lower.tail = FALSE)))
# for n = 30
n = 30
s = S/sqrt(n)
print(paste("Z - value =",(xbar-m0)/s))
print(paste("P-value =",pnorm((xbar-m0)/s, lower.tail = FALSE)))
# for n = 40
n = 40
s = S/sqrt(n)
print(paste("Z - value =",(xbar-m0)/s))
print(paste("P-value =",pnorm((xbar-m0)/s, lower.tail = FALSE)))
# for n = 50
n = 50
s = S/sqrt(n)
print(paste("Z - value =",(xbar-m0)/s))
print(paste("P-value =",pnorm((xbar-m0)/s, lower.tail = FALSE)))
# for n = 10
n = 10
s = S/sqrt(n)
print(paste("Z-value =",(xbar-m0)/s))
print(paste("P-value =",pnorm((xbar-m0)/s, lower.tail = FALSE)))
# for n = 20
n = 20
s = S/sqrt(n)
print(paste("Z-value =",(xbar-m0)/s))
print(paste("P-value =",pnorm((xbar-m0)/s, lower.tail = FALSE)))
# for n = 30
n = 30
s = S/sqrt(n)
print(paste("Z-value =",(xbar-m0)/s))
print(paste("P-value =",pnorm((xbar-m0)/s, lower.tail = FALSE)))
# for n = 40
n = 40
s = S/sqrt(n)
print(paste("Z-value =",(xbar-m0)/s))
print(paste("P-value =",pnorm((xbar-m0)/s, lower.tail = FALSE)))
# for n = 50
n = 50
s = S/sqrt(n)
print(paste("Z-value =",(xbar-m0)/s))
print(paste("P-value =",pnorm((xbar-m0)/s, lower.tail = FALSE)))
# function for shading area in a graph
colorArea <- function(from, to, density, ..., col="lightgray", dens=NULL){
y_seq <- seq(from, to, length.out=500)
d <- c(0, density(y_seq, ...), 0)
polygon(c(from, y_seq, to), d, col=col, density=dens)
}
curve(dnorm(x, mean = 0, sd = 1), from = -3, to = 3)
colorArea(from=-3, to=Z, dnorm)
text(Z+.2,0.2, round(Z,2))
#Here, level of significance
a = .05
# As it is a one-tailed test
qnorm(a)
#Here
n = 100 # sample size
m = 286 # mean
S = 155 # standard deviation of the population
s = S/sqrt(n) # standard deviation of the sample
a = .05 # level of significance
z = qnorm(a)
# As Z = (x -mean)/standard deviation
# So, x = Z* standard deviation + mean
x_b = z*s+m
x_b
#Here
n = 100 # sample size
m = 271 # alternate mean
S = 155 # standard deviation of the population
s = S/sqrt(n) # standard deviation of the sample
x_c = x_b
# As Z = (x bar-mean)/standard deviation
z = (x_c-m)/s
# As it is a one-tailed test
pnorm(z)
# Here
m0 = 286 #old mean
m1 = 271 # new mean
a = .05 # level of significance
S = 155 # standard deviation of the population
n = 100 # sample size
s = S/sqrt(n) # standard deviation of the sample
z1 = qnorm(1-a)
# We know that Power   =   P[Z > Z1 − |(m1 − m0)| / (S / √n)]
p = 1- pnorm(z1-(abs(m1-m0)/s))
p
#Here
m0 = 286 #old mean
m1 = 271 # new mean
S = 155 # standard deviation of the population
a = .05 # level of significance
z1 = qnorm(1-a)
p = .8 # desired power
z2 = qnorm(p)
z1
z2
# we know sample size, n = (z1+z2)^2*S^2/(m0-m1)^2
n = (z1+z2)^2*S^2/(m1-m0)^2
n
df = data.frame("Occupation" = c("Professional", "Managerial", "Administrative","Sales", 'Mechanical', 'Service', 'Operator', 'Farm'),
"p" =c(.23,.22,.17,.15,.12,.13,.12,.08),"n"=c(2447,2552,2309,1811,1979,2592,2782,571))
df
# with 95% confidence level for a two tailed test
a = .05
# So confidence level c = 1 - (a/2)
c = 1 - (a/2)
c
# We know that CI (Proportion) = (P^ - Zc*sqrt(p^(1-p^)/n), P^ + Zc*sqrt(p^(1-p^)/n))
df$CI_left = df$p-qnorm(c)*sqrt(df$p*(1-df$p)/df$n)
df$CI_right = df$p+qnorm(c)*sqrt(df$p*(1-df$p)/df$n)
df
# So the confidence intervals are
print(paste('(',df$CI_left,',',df$CI_right,')'))
# five-number summary
summary(df)
# Here
m0 = 0 # null hypothesis mean
xbar = 4 # new mean
S = 14 # standard deviation
a = .05 # level of significance
# for n = 10
n = 10
s = S/sqrt(n)
print(paste("Z-value =",(xbar-m0)/s))
print(paste("P-value =",pnorm((xbar-m0)/s, lower.tail = FALSE)))
# for n = 20
n = 20
s = S/sqrt(n)
print(paste("Z-value =",(xbar-m0)/s))
print(paste("P-value =",pnorm((xbar-m0)/s, lower.tail = FALSE)))
# for n = 30
n = 30
s = S/sqrt(n)
print(paste("Z-value =",(xbar-m0)/s))
print(paste("P-value =",pnorm((xbar-m0)/s, lower.tail = FALSE)))
# for n = 40
n = 40
s = S/sqrt(n)
print(paste("Z-value =",(xbar-m0)/s))
print(paste("P-value =",pnorm((xbar-m0)/s, lower.tail = FALSE)))
# for n = 50
n = 50
s = S/sqrt(n)
print(paste("Z-value =",(xbar-m0)/s))
print(paste("P-value =",pnorm((xbar-m0)/s, lower.tail = FALSE)))
arr = c(5.4,5.2,4.5,4.9,5.7,6.3)
xbar = mean(arr)
xbar
# Here
S = .9 # standard deviation of the population
n = length(arr) # sample size
n
# We know that CI (Proportion) = (P^ - Zc*sqrt(p^(1-p^)/n), P^ + Zc*sqrt(p^(1-p^)/n))
# With 95% confidence level for a two-tailed test
a = .05
# and confidence level c = 1 - a/2
c = 1 - a/2
c
# So, Confidence interval for the mean blood phosphorus level
print(paste('(',xbar-qnorm(c)*S/sqrt(n),',',xbar+qnorm(c)*S/sqrt(n),')'))
# We know that CI (Proportion) = (P^ - Zc*sqrt(p^(1-p^)/n), P^ + Zc*sqrt(p^(1-p^)/n))
# With 90% confidence level for a two-tailed test
a = .1
# and confidence level c = 1 - a/2
c = 1 - a/2
c
# Here
S = 8 # standard deviation of the population
xbar = 145 # mean
n = 15 # sample size
# So, Confidence interval for the mean cellulose content in the population
print(paste('(',xbar-qnorm(c)*S/sqrt(n),',',xbar+qnorm(c)*S/sqrt(n),')'))
# So
m = 140 # mean of the null hypothesis
# We know that test statics Z = (xbar - m)/(S/sqrt(n))
Z = (xbar - m)/(S/sqrt(n))
Z
# So P- value of P(Z > 2.420615)
pnorm(Z, lower.tail = FALSE)
# Here
xbar = 6.9 # mean of the sample
S = 55 # Standard deviation
n = 104 # Sample size
m = 0 # mean of null hypothesis
Z = (xbar-m)/(S/sqrt(n))
Z
# function for shading area in a graph
colorArea <- function(from, to, density, ..., col="lightgray", dens=NULL){
y_seq <- seq(from, to, length.out=500)
d <- c(0, density(y_seq, ...), 0)
polygon(c(from, y_seq, to), d, col=col, density=dens)
}
curve(dnorm(x, mean = 0, sd = 1), from = -3, to = 3)
colorArea(from=-3, to=Z, dnorm)
text(Z+.2,0.2, round(Z,2))
# So the P-value is
P = pnorm(Z, lower.tail = FALSE)
p
# So the P-value is
P = pnorm(Z, lower.tail = TRUE)
p
# Here
xbar = 6.9 # mean of the sample
S = 55 # Standard deviation
n = 104 # Sample size
m = 0 # mean of null hypothesis
Z = (xbar-m)/(S/sqrt(n))
Z
# So the P-value is
P = pnorm(Z, lower.tail = TRUE)
p
z
Z
# So the P-value is
P = pnorm(Z, lower.tail = TRUE)
p
# So the P-value is
P = pnorm(Z, lower.tail = False)
# So the P-value is
P = pnorm(Z, lower.tail = FALSE)
p
# So the P-value is
P = 1- pnorm(Z, lower.tail = FALSE)
p
# So the P-value is
P = 1- pnorm(Z, lower.tail = FALSE)
P
# So the P-value is
P = pnorm(Z, lower.tail = FALSE)
P
curve(dnorm(x, mean = m, sd = S), from = -3*S, to = 3*S)
colorArea(from=-3, to=Z, dnorm)
text(Z+.2,0.2, round(Z,2))
curve(dnorm(x, mean = m, sd = S), from = -3*S, to = 3*S)
colorArea(from=-3*S, to=Z, dnorm)
text(Z+.2,0.2, round(Z,2))
curve(dnorm(x, mean = m, sd = S), from = -3*S, to = 3*S)
colorArea(from=-3*S, to=3*Z, dnorm)
text(Z+.2,0.2, round(Z,2))
curve(dnorm(x, mean = m, sd = S), from = m-3*S, to = m+3*S)
colorArea(from=-3*S, to=3*Z, dnorm)
text(Z+.2,0.2, round(Z,2))
curve(dnorm(x, mean = m, sd = S), from = m-3*S, to = m+3*S)
colorArea(from=m-3*S, to=Z, dnorm)
text(Z+.2,0.2, round(Z,2))
curve(dnorm(x, mean = m, sd = S), from = m-3*S, to = m+3*S)
colorArea(from=m-3*S, to=m+Z, dnorm)
text(Z+.2,0.2, round(Z,2))
curve(dnorm(x, mean = 0, sd = 1), from = -3, to = 3)
colorArea(from=-3, to=Z, dnorm)
text(Z+.2,0.2, round(Z,2))
curve(dnorm(x, mean = 0, sd = 1), from = -3, to = 3)
colorArea(from=-3, to=Z, dnorm)
text(Z+.2,0.2, round(Z,2))
axis(1, at = c('-3S', '-2S', '-S','mean','S','2S','3S'))
curve(dnorm(x, mean = 0, sd = 1), from = -3, to = 3)
colorArea(from=-3, to=Z, dnorm)
text(Z+.2,0.2, round(Z,2))
axis(1, at = seq(-3,3,1),labels = c('-3S', '-2S', '-S','mean','S','2S','3S'))
curve(dnorm(x, mean = 0, sd = 1), from = -3, to = 3)
colorArea(from=-3, to=Z, dnorm)
text(Z+.2,0.2, round(Z,2))
axis(1, labels = c('-3S', '-2S', '-S','mean','S','2S','3S'))
curve(dnorm(x, mean = 0, sd = 1), from = -3, to = 3)
colorArea(from=-3, to=Z, dnorm)
text(Z+.2,0.2, round(Z,2))
axis(1, at = c(-3,-2,-1,0,1,2,3), labels = c('-3S', '-2S', '-S','mean','S','2S','3S'))
curve(dnorm(x, mean = 0, sd = 1), from = -3, to = 3, xaxt = "n")
colorArea(from=-3, to=Z, dnorm)
text(Z+.2,0.2, round(Z,2))
axis(1, at = c(-3,-2,-1,0,1,2,3), labels = c('-3S', '-2S', '-S','mean','S','2S','3S'))
curve(dnorm(x, mean = 0, sd = 1), from = -3, to = 3, xaxt = "n", yaxt = 'n')
colorArea(from=-3, to=Z, dnorm)
text(Z+.2,0.2, round(Z,2))
axis(1, at = c(-3,-2,-1,0,1,2,3), labels = c('-3S', '-2S', '-S','mean','S','2S','3S'))
curve(dnorm(x, mean = 0, sd = 1), from = -3, to = 3, xaxt = "n", yaxt = 'n', xlab = "Standard deviation")
colorArea(from=-3, to=Z, dnorm)
text(Z+.2,0.2, round(Z,2))
axis(1, at = c(-3,-2,-1,0,1,2,3), labels = c('-3S', '-2S', '-S','mean','S','2S','3S'))
curve(dnorm(x, mean = 0, sd = 1), from = -3, to = 3, yaxt = 'n', xlab = "Standard deviation")
colorArea(from=-3, to=Z, dnorm)
text(Z+.2,0.2, round(Z,2))
#axis(1, at = c(-3,-2,-1,0,1,2,3), labels = c('-3S', '-2S', '-S','mean','S','2S','3S'))
curve(dnorm(x, mean = 0, sd = 1), from = -3, to = 3, yaxt = 'n', xlab = "Standard deviation")
colorArea(from=-3, to=Z, dnorm)
text(Z+.2,0.2, round(Z,2))
abline(v=0, col="red")
#axis(1, at = c(-3,-2,-1,0,1,2,3), labels = c('-3S', '-2S', '-S','mean','S','2S','3S'))
curve(dnorm(x, mean = 0, sd = 1), from = -3, to = 3, yaxt = 'n', xlab = "Standard deviation")
colorArea(from=-3, to=Z, dnorm)
text(Z+.2,0.2, round(Z,2))
abline(v=0, col="red")
abline(v=Z, col="purple")
legend(100, .04, legend=c("Mean", "Z-value"),
col=c("red", "purple"), lty=1:1, cex=0.8)
#axis(1, at = c(-3,-2,-1,0,1,2,3), labels = c('-3S', '-2S', '-S','mean','S','2S','3S'))
curve(dnorm(x, mean = 0, sd = 1), from = -3, to = 3, yaxt = 'n', xlab = "Standard deviation")
colorArea(from=-3, to=Z, dnorm)
text(Z+.2,0.2, round(Z,2))
abline(v=0, col="red")
abline(v=Z, col="purple")
legend(2, .02, legend=c("Mean", "Z-value"),
col=c("red", "purple"), lty=1:1, cex=0.8)
#axis(1, at = c(-3,-2,-1,0,1,2,3), labels = c('-3S', '-2S', '-S','mean','S','2S','3S'))
curve(dnorm(x, mean = 0, sd = 1), from = -3, to = 3, yaxt = 'n', xlab = "Standard deviation")
colorArea(from=-3, to=Z, dnorm)
text(Z+.2,0.2, round(Z,2))
abline(v=0, col="red")
abline(v=Z, col="purple")
legend(2, .09, legend=c("Mean", "Z-value"),
col=c("red", "purple"), lty=1:1, cex=0.8)
#axis(1, at = c(-3,-2,-1,0,1,2,3), labels = c('-3S', '-2S', '-S','mean','S','2S','3S'))
curve(dnorm(x, mean = 0, sd = 1), from = -3, to = 3, yaxt = 'n', xlab = "Standard deviation")
colorArea(from=-3, to=Z, dnorm)
text(Z+.2,0.2, round(Z,2))
abline(v=0, col="red")
abline(v=Z, col="purple")
legend(2, .9, legend=c("Mean", "Z-value"),
col=c("red", "purple"), lty=1:1, cex=0.8)
#axis(1, at = c(-3,-2,-1,0,1,2,3), labels = c('-3S', '-2S', '-S','mean','S','2S','3S'))
curve(dnorm(x, mean = 0, sd = 1), from = -3, to = 3, yaxt = 'n', xlab = "Standard deviation")
colorArea(from=-3, to=Z, dnorm)
text(Z+.2,0.2, round(Z,2))
abline(v=0, col="red")
abline(v=Z, col="purple")
legend(2, .4, legend=c("Mean", "Z-value"),
col=c("red", "purple"), lty=1:1, cex=0.8)
#axis(1, at = c(-3,-2,-1,0,1,2,3), labels = c('-3S', '-2S', '-S','mean','S','2S','3S'))
curve(dnorm(x, mean = 0, sd = 1), from = -3, to = 3, yaxt = 'n', xlab = "Standard deviation")
colorArea(from=-3, to=Z, dnorm)
text(Z+.2,0.2, round(Z,2))
text(0,0.2, "mean")
abline(v=0, col="red")
abline(v=Z, col="purple")
legend(2, .4, legend=c("Mean", "Z-value"),
col=c("red", "purple"), lty=1:1, cex=0.8)
#axis(1, at = c(-3,-2,-1,0,1,2,3), labels = c('-3S', '-2S', '-S','mean','S','2S','3S'))
curve(dnorm(x, mean = 0, sd = 1), from = -3, to = 3, yaxt = 'n', xlab = "Standard deviation")
colorArea(from=-3, to=Z, dnorm)
text(Z+.2,0.2, round(Z,2))
text(0.2,0.2, "mean")
abline(v=0, col="red")
abline(v=Z, col="purple")
legend(2, .4, legend=c("Mean", "Z-value"),
col=c("red", "purple"), lty=1:1, cex=0.8)
#axis(1, at = c(-3,-2,-1,0,1,2,3), labels = c('-3S', '-2S', '-S','mean','S','2S','3S'))
curve(dnorm(x, mean = 0, sd = 1), from = -3, to = 3, yaxt = 'n', xlab = "Standard deviation")
colorArea(from=-3, to=Z, dnorm)
text(Z+.2,0.2, round(Z,2))
text(0.3,0.2, "mean")
abline(v=0, col="red")
abline(v=Z, col="purple")
legend(2, .4, legend=c("Mean", "Z-value"),
col=c("red", "purple"), lty=1:1, cex=0.8)
#axis(1, at = c(-3,-2,-1,0,1,2,3), labels = c('-3S', '-2S', '-S','mean','S','2S','3S'))
curve(dnorm(x, mean = 0, sd = 1), from = -3, to = 3, yaxt = 'n', xlab = "Standard deviation")
colorArea(from=-3, to=Z, dnorm)
text(Z+.2,0.2, round(Z,2))
text(0.3,0.2, "Mean")
abline(v=0, col="red")
abline(v=Z, col="purple")
legend(2, .4, legend=c("Mean", "Z-value"),
col=c("red", "purple"), lty=1:1, cex=0.8)
#axis(1, at = c(-3,-2,-1,0,1,2,3), labels = c('-3S', '-2S', '-S','mean','S','2S','3S'))
curve(dnorm(x, mean = 0, sd = 1), from = -3, to = 3, yaxt = 'n', xlab = "Standard deviation", title("normal"))
curve(dnorm(x, mean = 0, sd = 1), from = -3, to = 3, yaxt = 'n', xlab = "Standard deviation")
colorArea(from=-3, to=Z, dnorm)
text(Z+.2,0.2, round(Z,2))
text(0.3,0.2, "Mean")
abline(v=0, col="red")
abline(v=Z, col="purple")
legend(2, .4, legend=c("Mean", "Z-value"),
col=c("red", "purple"), lty=1:1, cex=0.8)
#axis(1, at = c(-3,-2,-1,0,1,2,3), labels = c('-3S', '-2S', '-S','mean','S','2S','3S'))
curve(dnorm(x, mean = 0, sd = 1), from = -3, to = 3, yaxt = 'n', xlab = "Standard deviation", main= "test")
colorArea(from=-3, to=Z, dnorm)
text(Z+.2,0.2, round(Z,2))
text(0.3,0.2, "Mean")
abline(v=0, col="red")
abline(v=Z, col="purple")
legend(2, .4, legend=c("Mean", "Z-value"),
col=c("red", "purple"), lty=1:1, cex=0.8)
#axis(1, at = c(-3,-2,-1,0,1,2,3), labels = c('-3S', '-2S', '-S','mean','S','2S','3S'))
curve(dnorm(x, mean = 0, sd = 1), from = -3, to = 3, yaxt = 'n', xlab = "Standard deviation", main= "Normal distribution of average CEO pay increase")
colorArea(from=-3, to=Z, dnorm)
text(Z+.2,0.2, round(Z,2))
text(0.3,0.2, "Mean")
abline(v=0, col="red")
abline(v=Z, col="purple")
legend(2, .4, legend=c("Mean", "Z-value"),
col=c("red", "purple"), lty=1:1, cex=0.8)
#axis(1, at = c(-3,-2,-1,0,1,2,3), labels = c('-3S', '-2S', '-S','mean','S','2S','3S'))
curve(dnorm(x, mean = 0, sd = 1), from = -3, to = 3, yaxt = 'n', xlab = "Standard deviation", main= "Normal distribution of average increase of CEOs pay ")
colorArea(from=-3, to=Z, dnorm)
text(Z+.2,0.2, round(Z,2))
text(0.3,0.2, "Mean")
abline(v=0, col="red")
abline(v=Z, col="purple")
legend(2, .4, legend=c("Mean", "Z-value"),
col=c("red", "purple"), lty=1:1, cex=0.8)
#axis(1, at = c(-3,-2,-1,0,1,2,3), labels = c('-3S', '-2S', '-S','mean','S','2S','3S'))
curve(dnorm(x, mean = 0, sd = 1), from = -3, to = 3, yaxt = 'n', xlab = "Standard deviation", main= "Normal distribution of average pay increase of CEOs ")
colorArea(from=-3, to=Z, dnorm)
text(Z+.2,0.2, round(Z,2))
text(0.3,0.2, "Mean")
abline(v=0, col="red")
abline(v=Z, col="purple")
legend(2, .4, legend=c("Mean", "Z-value"),
col=c("red", "purple"), lty=1:1, cex=0.8)
#axis(1, at = c(-3,-2,-1,0,1,2,3), labels = c('-3S', '-2S', '-S','mean','S','2S','3S'))
curve(dnorm(x, mean = 0, sd = 1), from = -3, to = 3, yaxt = 'n', xlab = "Standard deviation", main= "Normal distribution of average pay increase of CEOs ")
colorArea(from=-3, to=Z, dnorm)
text(Z+.2,0.2, round(Z,2))
text(0.3,0.2, "Mean")
abline(v=0, col="red")
abline(v=Z, col="purple")
legend(2, .4, legend=c("Mean", "Z-value"),
col=c("red", "purple"), lty=1:1, cex=0.8)
#axis(1, at = c(-3,-2,-1,0,1,2,3), labels = c('-3S', '-2S', '-S','mean','S','2S','3S'))
setwd("C:/Users/mosab/DS_Masters/DS_520/Week6")
curve(dnorm(x, mean = 0, sd = 1), from = -3, to = 3, yaxt = 'n', xlab = "Standard deviation", main= "Normal distribution of average pay increase of CEOs ")
colorArea(from=-3, to=Z, dnorm)
text(Z+.2,0.2, round(Z,2))
text(0.3,0.2, "Mean")
abline(v=0, col="red")
abline(v=Z, col="purple")
legend(1.5, .4, legend=c("Mean", "Z-value"),
col=c("red", "purple"), lty=1:1, cex=0.8)
#axis(1, at = c(-3,-2,-1,0,1,2,3), labels = c('-3S', '-2S', '-S','mean','S','2S','3S'))
unlink("Assignment_Wk6_Mir_cache", recursive = TRUE)
curve(dnorm(x, mean = 0, sd = 1), from = -3, to = 3, yaxt = 'n', xlab = "Standard deviation", main= "Normal distribution of average pay increase of CEOs ")
colorArea(from=-3, to=Z, dnorm)
text(Z+.3,0.2, round(Z,2))
text(0.3,0.2, "Mean")
abline(v=0, col="red")
abline(v=Z, col="purple")
legend(1.5, .4, legend=c("Mean", "Z-value"),
col=c("red", "purple"), lty=1:1, cex=0.8)
#axis(1, at = c(-3,-2,-1,0,1,2,3), labels = c('-3S', '-2S', '-S','mean','S','2S','3S'))
curve(dnorm(x, mean = 0, sd = 1), from = -3, to = 3, yaxt = 'n', xlab = "Standard deviation", main= "Normal distribution of average pay increase of CEOs ")
colorArea(from=-3, to=Z, dnorm)
text(Z+.3,0.2, round(Z,2))
text(0.4,0.2, "Mean")
abline(v=0, col="red")
abline(v=Z, col="purple")
legend(1.5, .4, legend=c("Mean", "Z-value"),
col=c("red", "purple"), lty=1:1, cex=0.8)
#axis(1, at = c(-3,-2,-1,0,1,2,3), labels = c('-3S', '-2S', '-S','mean','S','2S','3S'))
unlink("Assignment_Wk6_Mir_cache", recursive = TRUE)
(2-1)/(3/sqrt(10))
pnorm((2-1)/(3/sqrt(10)))
a = .01
c = 1 - a/2
c
qnorm(c)
p = 1- pnorm(qnorm(c)-(abs(28-30)/1))
p
pnorm(-2)
pnorm(qnorm(c)-(abs(28-30)/1))
pnorm(-2)
pnorm((525-490)/(80/sqrt(25)))
1- pnorm((525-490)/(80/sqrt(25)))
